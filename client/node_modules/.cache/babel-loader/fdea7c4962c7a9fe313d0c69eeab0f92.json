{"ast":null,"code":"var _jsxFileName = \"/home/mishal/Documents/desktop/react/delpos-main/client/src/Components/Widgets/Forms/sendMsgForm.js\";\nimport React from 'react'; //MUI\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'; //\n\nvar SendMsgForm = function SendMsgForm(props) {\n  //gathers data and stores it properly in an array\n  var renderFields = function renderFields() {\n    var formArray = [];\n\n    for (var keyname in props.formData) {\n      formArray.push({\n        id: keyname,\n        settings: props.formData[keyname]\n      });\n    } //distributes each form field over to the templating function\n\n\n    return formArray.map(function (item, i) {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"form-element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, renderTemplate(item));\n    });\n  }; //listens for a change in the field\n\n\n  var changeHandler = function changeHandler(event, id, blur) {\n    var newState = props.formData;\n    newState[id].config.value = event.target.value;\n\n    if (blur) {\n      var validData = validate(newState[id]);\n      newState[id].valid = validData[0];\n      newState[id].validationMessage = validData[1];\n    }\n\n    newState[id].touched = blur;\n    props.change(newState);\n  }; //confirms that the given form iput is valid within a certain configuration\n\n\n  var validate = function validate(element) {\n    var error = [true, ''];\n\n    if (element.validation.minLen) {\n      var valid = element.config.value.length >= element.validation.minLen;\n      var message = 'Must be 5 characters or more..';\n      error = !valid ? [valid, message] : [true, ''];\n    }\n\n    if (element.validation.required) {\n      var _valid = element.config.value.trim() !== '';\n\n      var _message = 'This Field is Required';\n      error = !_valid ? [_valid, _message] : error;\n    }\n\n    return error;\n  }; //displays the validation message\n\n\n  var showValidation = function showValidation(items) {\n    var errorMessage = null;\n\n    if (items.validation && !items.valid) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"label_error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, items.validationMessage);\n    }\n\n    return errorMessage;\n  };\n\n  var renderTemplate = function renderTemplate(item) {\n    var values = item.settings;\n    return React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(TextField, Object.assign({\n      className: classes.textField\n    }, values.config, {\n      value: values.config.value,\n      onBlur: function onBlur(event) {\n        return changeHandler(event, item.id, true);\n      },\n      onChange: function onChange(event) {\n        return changeHandler(event, item.id, false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), showValidation(values));\n  }; //contact information and location\n\n\n  var displayForm = function displayForm(props) {\n    return props.data.info.map(function (item, i) {\n      return React.createElement(Grid, {\n        key: i,\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, item.icon), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.locationHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, item.header), React.createElement(Typography, {\n        component: \"div\",\n        className: classes.locationParagraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, item.address.a), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, item.address.b), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, item.address.c)))));\n    });\n  };\n\n  var displaySubmitButton = function displaySubmitButton() {\n    return props.data.loading ? 'sending...' : React.createElement(Button, {\n      component: \"button\",\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"submit\");\n  };\n\n  var classes = props.styles.classes;\n  return React.createElement(\"div\", {\n    className: classes.msgFormRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return props.submitForm(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    spacing: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    xs: 12,\n    className: classes.Inputs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    spacing: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.msgFormHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Send Us a Message\"), React.createElement(Typography, {\n    className: classes.msgFormParagraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Fill the form and we get back to you soon\")), renderFields(), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, displaySubmitButton()))), React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, displayForm(props))))));\n};\n\nexport default SendMsgForm;","map":{"version":3,"sources":["/home/mishal/Documents/desktop/react/delpos-main/client/src/Components/Widgets/Forms/sendMsgForm.js"],"names":["React","Button","TextField","Typography","Grid","SendMsgForm","props","renderFields","formArray","keyname","formData","push","id","settings","map","item","i","renderTemplate","changeHandler","event","blur","newState","config","value","target","validData","validate","valid","validationMessage","touched","change","element","error","validation","minLen","length","message","required","trim","showValidation","items","errorMessage","values","classes","textField","displayForm","data","info","icon","locationHeader","header","locationParagraph","address","a","b","c","displaySubmitButton","loading","styles","msgFormRoot","e","submitForm","Inputs","msgFormHeader","msgFormParagraph"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAMC,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,OAAT,IAAoBH,KAAK,CAACI,QAA1B,EAAoC;AAChCF,MAAAA,SAAS,CAACG,IAAV,CAAe;AACXC,QAAAA,EAAE,EAAEH,OADO;AAEXI,QAAAA,QAAQ,EAAEP,KAAK,CAACI,QAAN,CAAeD,OAAf;AAFC,OAAf;AAIH,KAPsB,CAQvB;;;AACA,WAAOD,SAAS,CAACM,GAAV,CAAc,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC9B,aACI;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,cAAc,CAACF,IAAD,CADnB,CADJ;AAKH,KANM,CAAP;AAOH,GAhBD,CAF2B,CAmB3B;;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQP,EAAR,EAAYQ,IAAZ,EAAqB;AACvC,QAAMC,QAAQ,GAAGf,KAAK,CAACI,QAAvB;AACAW,IAAAA,QAAQ,CAACT,EAAD,CAAR,CAAaU,MAAb,CAAoBC,KAApB,GAA4BJ,KAAK,CAACK,MAAN,CAAaD,KAAzC;;AAEA,QAAIH,IAAJ,EAAU;AACN,UAAIK,SAAS,GAAGC,QAAQ,CAACL,QAAQ,CAACT,EAAD,CAAT,CAAxB;AACAS,MAAAA,QAAQ,CAACT,EAAD,CAAR,CAAae,KAAb,GAAqBF,SAAS,CAAC,CAAD,CAA9B;AACAJ,MAAAA,QAAQ,CAACT,EAAD,CAAR,CAAagB,iBAAb,GAAiCH,SAAS,CAAC,CAAD,CAA1C;AACH;;AACDJ,IAAAA,QAAQ,CAACT,EAAD,CAAR,CAAaiB,OAAb,GAAuBT,IAAvB;AACAd,IAAAA,KAAK,CAACwB,MAAN,CAAaT,QAAb;AACH,GAXD,CApB2B,CAiC3B;;;AACA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACK,OAAD,EAAa;AAE1B,QAAIC,KAAK,GAAG,CAAC,IAAD,EAAO,EAAP,CAAZ;;AAEA,QAAID,OAAO,CAACE,UAAR,CAAmBC,MAAvB,EAA+B;AAC3B,UAAIP,KAAK,GAAGI,OAAO,CAACT,MAAR,CAAeC,KAAf,CAAqBY,MAArB,IAA+BJ,OAAO,CAACE,UAAR,CAAmBC,MAA9D;AACA,UAAIE,OAAO,GAAG,gCAAd;AACAJ,MAAAA,KAAK,GAAG,CAACL,KAAD,GAAS,CAACA,KAAD,EAAQS,OAAR,CAAT,GAA4B,CAAC,IAAD,EAAO,EAAP,CAApC;AACH;;AAED,QAAIL,OAAO,CAACE,UAAR,CAAmBI,QAAvB,EAAiC;AAC7B,UAAIV,MAAK,GAAGI,OAAO,CAACT,MAAR,CAAeC,KAAf,CAAqBe,IAArB,OAAgC,EAA5C;;AACA,UAAIF,QAAO,GAAG,wBAAd;AACAJ,MAAAA,KAAK,GAAG,CAACL,MAAD,GAAS,CAACA,MAAD,EAAQS,QAAR,CAAT,GAA4BJ,KAApC;AACH;;AACD,WAAOA,KAAP;AACH,GAhBD,CAlC2B,CAoD3B;;;AACA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAID,KAAK,CAACP,UAAN,IAAoB,CAACO,KAAK,CAACb,KAA/B,EAAsC;AAClCc,MAAAA,YAAY,GACR;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACZ,iBADX,CADJ;AAKH;;AACD,WAAOa,YAAP;AACH,GAVD;;AAYA,MAAMxB,cAAc,GAAG,SAAjBA,cAAiB,CAACF,IAAD,EAAU;AAC7B,QAAI2B,MAAM,GAAG3B,IAAI,CAACF,QAAlB;AACA,WACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,SAAS,EAAE8B,OAAO,CAACC;AADvB,OAEQF,MAAM,CAACpB,MAFf;AAGI,MAAA,KAAK,EAAEoB,MAAM,CAACpB,MAAP,CAAcC,KAHzB;AAII,MAAA,MAAM,EAAE,gBAACJ,KAAD;AAAA,eAAWD,aAAa,CAACC,KAAD,EAAQJ,IAAI,CAACH,EAAb,EAAiB,IAAjB,CAAxB;AAAA,OAJZ;AAKI,MAAA,QAAQ,EAAE,kBAACO,KAAD;AAAA,eAAWD,aAAa,CAACC,KAAD,EAAQJ,IAAI,CAACH,EAAb,EAAiB,KAAjB,CAAxB;AAAA,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAQK2B,cAAc,CAACG,MAAD,CARnB,CADJ;AAYH,GAdD,CAjE2B,CAiF3B;;;AACA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACvC,KAAD,EAAW;AAC3B,WAAOA,KAAK,CAACwC,IAAN,CAAWC,IAAX,CAAgBjC,GAAhB,CAAoB,UAACC,IAAD,EAAOC,CAAP;AAAA,aACvB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAc,QAAA,IAAI,MAAlB;AAAmB,QAAA,EAAE,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACiC,IADV,CADJ,EAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEL,OAAO,CAACM,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDlC,IAAI,CAACmC,MAArD,CADJ,EAEI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,KAAtB;AAA4B,QAAA,SAAS,EAAEP,OAAO,CAACQ,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIpC,IAAI,CAACqC,OAAL,CAAaC,CAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAItC,IAAI,CAACqC,OAAL,CAAaE,CAAjB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIvC,IAAI,CAACqC,OAAL,CAAaG,CAAjB,CAHJ,CAFJ,CAJJ,CADJ,CADuB;AAAA,KAApB,CAAP;AAiBH,GAlBD;;AAmBA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WACxBlD,KAAK,CAACwC,IAAN,CAAWW,OAAX,GACI,YADJ,GAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAyD,MAAA,OAAO,EAAC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJoB;AAAA,GAA5B;;AArG2B,MA2GnBd,OA3GmB,GA2GPrC,KAAK,CAACoD,MA3GC,CA2GnBf,OA3GmB;AA4G3B,SACI;AAAK,IAAA,SAAS,EAAEA,OAAO,CAACgB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAItD,KAAK,CAACuD,UAAN,CAAiBD,CAAjB,CAAJ;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAC,QAAxC;AAAiD,IAAA,OAAO,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,SAAS,EAAEjB,OAAO,CAACmB,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAoD,IAAA,OAAO,EAAE,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEnB,OAAO,CAACoB,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEpB,OAAO,CAACqB,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFJ,CADJ,EAKKzD,YAAY,EALjB,EAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiD,mBAAmB,EADxB,CANJ,CADJ,CAFJ,EAeI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,WAAW,CAACvC,KAAD,CADhB,CADJ,CAfJ,CADJ,CADJ,CADJ;AA2BH,CAvID;;AA2IA,eAAeD,WAAf","sourcesContent":["import React from 'react'\n//MUI\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\n//\n\nconst SendMsgForm = (props) => {\n    //gathers data and stores it properly in an array\n    const renderFields = () => {\n        const formArray = [];\n        for (let keyname in props.formData) {\n            formArray.push({\n                id: keyname,\n                settings: props.formData[keyname]\n            })\n        }\n        //distributes each form field over to the templating function\n        return formArray.map((item, i) => {\n            return (\n                <div key={i} className='form-element'>\n                    {renderTemplate(item)}\n                </div>\n            )\n        })\n    }\n    //listens for a change in the field\n    const changeHandler = (event, id, blur) => {\n        const newState = props.formData;\n        newState[id].config.value = event.target.value\n\n        if (blur) {\n            let validData = validate(newState[id])\n            newState[id].valid = validData[0]\n            newState[id].validationMessage = validData[1]\n        }\n        newState[id].touched = blur;\n        props.change(newState)\n    }\n\n    //confirms that the given form iput is valid within a certain configuration\n    const validate = (element) => {\n\n        let error = [true, '']\n\n        if (element.validation.minLen) {\n            let valid = element.config.value.length >= element.validation.minLen\n            let message = 'Must be 5 characters or more..'\n            error = !valid ? [valid, message] : [true, '']\n        }\n\n        if (element.validation.required) {\n            let valid = element.config.value.trim() !== '';\n            let message = 'This Field is Required'\n            error = !valid ? [valid, message] : error\n        }\n        return error\n    }\n\n    //displays the validation message\n    const showValidation = (items) => {\n        let errorMessage = null;\n        if (items.validation && !items.valid) {\n            errorMessage = (\n                <div className='label_error'>\n                    {items.validationMessage}\n                </div>\n            )\n        }\n        return errorMessage\n    }\n\n    const renderTemplate = (item) => {\n        let values = item.settings\n        return (\n            <Grid item sm={12} xs={12} md={8}>\n                <TextField\n                    className={classes.textField}\n                    {...values.config}\n                    value={values.config.value}\n                    onBlur={(event) => changeHandler(event, item.id, true)}\n                    onChange={(event) => changeHandler(event, item.id, false)}\n                />\n                {showValidation(values)}\n            </Grid>\n        )\n    }\n\n    //contact information and location\n    const displayForm = (props) => {\n        return props.data.info.map((item, i) => (\n            <Grid key={i} item xs>\n                <Grid container>\n                    <Grid item xs={2}>\n                        {item.icon}\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Typography className={classes.locationHeader}>{item.header}</Typography>\n                        <Typography component='div' className={classes.locationParagraph}>\n                            <p>{item.address.a}</p>\n                            <p>{item.address.b}</p>\n                            <p>{item.address.c}</p>\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ))\n    }\n    const displaySubmitButton = () => (\n        props.data.loading ?\n            'sending...'\n            :\n            <Button component='button' type='submit' color='primary' variant='contained'>submit</Button>\n    )\n    const { classes } = props.styles\n    return (\n        <div className={classes.msgFormRoot}>\n            <form onSubmit={e => props.submitForm(e)}>\n                <Grid container direction='row' justify='center' spacing={40}>\n\n                    <Grid item lg={5} xs={12} className={classes.Inputs}>\n                        <Grid container direction='column' justify='center' spacing={8}>\n                            <Grid item sm={12}>\n                                <Typography className={classes.msgFormHeader}>Send Us a Message</Typography>\n                                <Typography className={classes.msgFormParagraph}>Fill the form and we get back to you soon</Typography>\n                            </Grid>\n                            {renderFields()}\n                            <Grid item xs>\n                                {displaySubmitButton()}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item lg={5} xs={12}>\n                        <Grid container direction='column' justify='center'>\n                            {displayForm(props)}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default SendMsgForm"]},"metadata":{},"sourceType":"module"}