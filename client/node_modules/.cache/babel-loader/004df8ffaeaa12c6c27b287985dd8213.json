{"ast":null,"code":"var _jsxFileName = \"/home/mishal/Documents/desktop/react/delpos-main/client/src/Components/HeroSlide/heroSlide.js\";\nimport React from 'react'; //MUI\n\nimport Grid from '@material-ui/core/Grid'; //\n\nvar HeroSlide = function HeroSlide(props) {\n  var classes = props.styles.classes; //the function distinguishes the data (photo or video) , and renders it properly\n\n  var media = function media(item) {\n    if (item.type === 'video') {\n      return React.createElement(\"video\", {\n        className: classes.videoPlayer,\n        loop: true,\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: item.url,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n\n    if (item.type === 'image') {\n      return React.createElement(\"img\", {\n        className: classes.heroImage,\n        alt: \"hero\",\n        src: item.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    } else {\n      alert('else');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.HeroRoot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.heroContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xl: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, media(props.data))));\n};\n\nexport default HeroSlide;","map":{"version":3,"sources":["/home/mishal/Documents/desktop/react/delpos-main/client/src/Components/HeroSlide/heroSlide.js"],"names":["React","Grid","HeroSlide","props","classes","styles","media","item","type","videoPlayer","url","heroImage","alert","HeroRoot","heroContainer","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MAClBC,OADkB,GACPD,KAAK,CAACE,MADC,CAClBD,OADkB,EAGzB;;AACA,MAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AAEpB,QAAGA,IAAI,CAACC,IAAL,KAAc,OAAjB,EAAyB;AACrB,aACI;AAAO,QAAA,SAAS,EAAEJ,OAAO,CAACK,WAA1B;AAAuC,QAAA,IAAI,MAA3C;AAA4C,QAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,GAAG,EAAEF,IAAI,CAACG,GAAlB;AAAuB,QAAA,IAAI,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;AACD,QAAIH,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;AACvB,aAEI;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACO,SAAxB;AAAmC,QAAA,GAAG,EAAC,MAAvC;AAA8C,QAAA,GAAG,EAAEJ,IAAI,CAACG,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ;AAMH,KAPD,MAOO;AACHE,MAAAA,KAAK,CAAC,MAAD,CAAL;AACH;AAGJ,GArBD;;AAuBA,SACI;AAAK,IAAA,SAAS,EAAER,OAAO,CAACS,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAET,OAAO,CAACU,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACH,KAAK,CAACY,IAAP,CADV,CADJ,CADJ,CADJ;AASH,CApCD;;AAwCA,eAAeb,SAAf","sourcesContent":["import React from 'react'\n\n//MUI\nimport Grid from '@material-ui/core/Grid'\n//\n\nconst HeroSlide = (props) => {\n    const {classes} = props.styles\n    \n    //the function distinguishes the data (photo or video) , and renders it properly\n    const media = (item) => {\n\n        if(item.type === 'video'){\n            return(\n                <video className={classes.videoPlayer} loop autoPlay>\n                    <source src={item.url} type='video/mp4'></source>\n                </video>\n            )\n        }\n        if (item.type === 'image') {\n            return(\n    \n                <img className={classes.heroImage} alt='hero' src={item.url}>\n                    <div></div>\n                </img>  \n            )\n        } else {\n            alert('else')\n        }\n    \n        \n    }\n\n    return(\n        <div className={classes.HeroRoot}>\n            <Grid container className={classes.heroContainer}>\n                <Grid item xl xs>\n                    {media(props.data)}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\n\n\nexport default HeroSlide\n"]},"metadata":{},"sourceType":"module"}