{"ast":null,"code":"var _jsxFileName = \"/home/mishal/Documents/desktop/react/delpos-main/client/src/Components/Widgets/Card/MediaCard/mediaCard.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom'; //MUI\n//\n\nvar MediaCard = function MediaCard(props) {\n  var classes = props.styles.classes; //mapping over the ain data dneeded n the card and passes it to the presentational template\n\n  var structurize = function structurize() {\n    return props.data.map(function (item, i) {\n      return React.createElement(Grid, {\n        item: true,\n        md: 6,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, template(item));\n    });\n  }; //recieves data and presents it as jsx\n\n\n  var template = function template(item) {\n    var text = item.text;\n    var media = item.media;\n    return React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      style: {\n        textDecoration: 'none'\n      },\n      to: text.button.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.media,\n      image: media.url,\n      title: \"Product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, text.header), React.createElement(Typography, {\n      className: \"caption_ts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, text.paragraph)))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: text.button.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, Object.assign({}, text.button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), text.button.cta))));\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, structurize()));\n};\n\nexport default MediaCard;","map":{"version":3,"sources":["/home/mishal/Documents/desktop/react/delpos-main/client/src/Components/Widgets/Card/MediaCard/mediaCard.js"],"names":["React","NavLink","MediaCard","props","classes","styles","structurize","data","map","item","i","template","text","media","card","textDecoration","button","link","url","header","paragraph","cta","root"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CACA;AAEA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,MAEnBC,OAFmB,GAEPD,KAAK,CAACE,MAFC,CAEnBD,OAFmB,EAI3B;;AACA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAOH,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe,UAACC,IAAD,EAAOC,CAAP;AAAA,aACpB,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,GAAG,EAAEA,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BC,QAAQ,CAACF,IAAD,CAAnC,CADoB;AAAA,KAAf,CAAP;AAGD,GAJD,CAL2B,CAW3B;;;AACA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACF,IAAD,EAAU;AAEzB,QAAIG,IAAI,GAAGH,IAAI,CAACG,IAAhB;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AAEA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAET,OAAO,CAACU,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAAhB;AAA4C,MAAA,EAAE,EAAEH,IAAI,CAACI,MAAL,CAAYC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAEb,OAAO,CAACS,KADrB;AAEE,MAAA,KAAK,EAAEA,KAAK,CAACK,GAFf;AAGE,MAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,IAAI,CAACO,MADR,CADF,EAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,IAAI,CAACQ,SADR,CAJF,CANF,CADF,CADF,EAmBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAER,IAAI,CAACI,MAAL,CAAYC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD,oBAAYL,IAAI,CAACI,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGJ,IAAI,CAACI,MAAL,CAAYK,GADf,CADF,CADF,CAnBF,CADF;AA+BD,GApCD;;AAuCA,SACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,WAAW,EADd,CADF,CADF;AAOD,CA1DD;;AA4DA,eAAeJ,SAAf","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n//MUI\n\n//\n\nconst MediaCard = (props) => {\n\n  const { classes } = props.styles\n\n  //mapping over the ain data dneeded n the card and passes it to the presentational template\n  const structurize = () => {\n    return props.data.map((item, i) => (\n      <Grid item md={6} key={i}>{template(item)}</Grid>\n    ))\n  }\n\n  //recieves data and presents it as jsx\n  const template = (item) => {\n    \n    let text = item.text\n    let media = item.media\n\n    return (\n      <Card className={classes.card}>\n        <NavLink style={{ textDecoration: 'none' }} to={text.button.link}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={media.url}\n              title=\"Product\"\n            />\n            <CardContent>\n              <Typography variant='h6' gutterBottom>\n                {text.header}\n              </Typography>\n              <Typography className='caption_ts'>\n                {text.paragraph}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </NavLink>\n\n        <CardActions>\n          <NavLink to={text.button.link}>\n            <Button {...text.button}>\n              {text.button.cta}\n            </Button>\n          </NavLink>\n        </CardActions>\n      </Card>\n\n\n    )\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction='row' spacing={40}>\n        {structurize()}\n      </Grid>\n    </div>\n  )\n}\n\nexport default MediaCard"]},"metadata":{},"sourceType":"module"}